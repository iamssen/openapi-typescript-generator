import { GenericModel } from '@rocket-scripts/openapi';

{{#hasImports}}
import {
  {{#imports}}
  {{{.}}},
  {{/imports}}
} from './';
{{/hasImports}}

/**
 * {{#lambda.indented_star_1}}{{{unescapedDescription}}}{{/lambda.indented_star_1}}
 * @interface {{classname}}
 */
export interface {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
  {{#additionalPropertiesType}}
  [key: string]: {{{additionalPropertiesType}}}{{#hasVars}} | any{{/hasVars}};
  {{/additionalPropertiesType}}

  {{#vars}}
  /**
   * {{#lambda.indented_star_4}}{{{unescapedDescription}}}{{/lambda.indented_star_4}}
   * @type {{=<% %>=}}{<%&datatype%>}<%={{ }}=%>
   * @memberof {{classname}}
   */
  {{#isReadOnly}}readonly {{/isReadOnly}}{{name}}{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{datatype}}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}};

  {{/vars}}
}

export const {{classname}}Model: GenericModel = {
  classname: '{{classname}}',
  type: 'generic',
  parent: {{#parent}}'{{{parent}}}'{{/parent}}{{^parent}}undefined{{/parent}},
  {{#discriminator}}
  discriminator: {
    propertyName: '{{discriminator.propertyName}}',
    mappedModels: [
      {{#discriminator.mappedModels}}
      { mappingName: '{{mappingName}}', modelName: '{{modelName}}' },
      {{/discriminator.mappedModels}}
    ],
  },
  {{/discriminator}}
  {{#hasVars}}
  vars: {
    {{#vars}}
    '{{name}}': {
      name: '{{name}}',
      baseName: '{{baseName}}',
      datatype: '{{datatype}}',
      required: {{required}},
      itemsDataType: {{#items}}'{{datatype}}'{{/items}}{{^items}}undefined{{/items}},
      isAnyType: {{isAnyType}},
      isBinary: {{isBinary}},
      isBoolean: {{isBoolean}},
      isByteArray: {{isByteArray}},
      isCircularReference: {{isCircularReference}},
      isContainer: {{isContainer}},
      isDate: {{isDate}},
      isDateTime: {{isDateTime}},
      isDiscriminator: {{isDiscriminator}},
      isDouble: {{isDouble}},
      isEmail: {{isEmail}},
      isEnum: {{isEnum}},
      isFile: {{isFile}},
      isFloat: {{isFloat}},
      isFreeFormObject: {{isFreeFormObject}},
      isInherited: {{isInherited}},
      isInteger: {{isInteger}},
      isListContainer: {{isListContainer}},
      isLong: {{isLong}},
      isMapContainer: {{isMapContainer}},
      isModel: {{isModel}},
      isNullable: {{isNullable}},
      isNumber: {{isNumber}},
      isNumeric: {{isNumeric}},
      isPrimitiveType: {{isPrimitiveType}},
      isReadOnly: {{isReadOnly}},
      isSelfReference: {{isSelfReference}},
      isString: {{isString}},
      isUri: {{isUri}},
      isUuid: {{isUuid}},
      isWriteOnly: {{isWriteOnly}},
      isXmlAttribute: {{isXmlAttribute}},
      isXmlWrapped: {{isXmlWrapped}},
    },
    {{/vars}}
  },
  baseNames: {
    {{#vars}}
    '{{name}}': '{{baseName}}',
    {{/vars}}
  },
  {{/hasVars}}
};

{{#hasEnums}}
{{#vars}}
{{#isEnum}}
/**
 * @enum {string}
 */
export enum {{classname}}{{enumName}} {
  {{#allowableValues}}
  {{#enumVars}}
  {{{name}}} = {{{value}}},
  {{/enumVars}}
  {{/allowableValues}}
};
{{/isEnum}}
{{/vars}}
{{/hasEnums}}