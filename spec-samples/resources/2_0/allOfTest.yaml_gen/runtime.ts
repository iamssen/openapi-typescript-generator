/* eslint-disable */
/**
 * Simple API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

import { TypeSerializer } from '@rocket-scripts/openapi';

import { ChildOfChildOfComposedParentModel } from './models/ChildOfChildOfComposedParent';
import { ChildOfChildOfComposedParentAllOfModel } from './models/ChildOfChildOfComposedParentAllOf';
import { ChildOfChildOfSimpleParentModel } from './models/ChildOfChildOfSimpleParent';
import { ChildOfChildOfSimpleParentAllOfModel } from './models/ChildOfChildOfSimpleParentAllOf';
import { ChildOfComposedParentModel } from './models/ChildOfComposedParent';
import { ChildOfComposedParentAllOfModel } from './models/ChildOfComposedParentAllOf';
import { ChildOfSimpleParentModel } from './models/ChildOfSimpleParent';
import { ChildOfSimpleParentAllOfModel } from './models/ChildOfSimpleParentAllOf';
import { ComposedParentModel } from './models/ComposedParent';
import { ComposedParentAllOfModel } from './models/ComposedParentAllOf';
import { CompositionOfSimpleCompositionModel } from './models/CompositionOfSimpleComposition';
import { CompositionOfSimpleCompositionAllOfModel } from './models/CompositionOfSimpleCompositionAllOf';
import { ModelOneModel } from './models/ModelOne';
import { ModelThreeModel } from './models/ModelThree';
import { ModelTwoModel } from './models/ModelTwo';
import { SimpleCompositionModel } from './models/SimpleComposition';
import { SimpleCompositionAllOfModel } from './models/SimpleCompositionAllOf';
import { SimpleParentModel } from './models/SimpleParent';

export const typeSerializer = new TypeSerializer({
  ChildOfChildOfComposedParent: ChildOfChildOfComposedParentModel,
  ChildOfChildOfComposedParentAllOf: ChildOfChildOfComposedParentAllOfModel,
  ChildOfChildOfSimpleParent: ChildOfChildOfSimpleParentModel,
  ChildOfChildOfSimpleParentAllOf: ChildOfChildOfSimpleParentAllOfModel,
  ChildOfComposedParent: ChildOfComposedParentModel,
  ChildOfComposedParentAllOf: ChildOfComposedParentAllOfModel,
  ChildOfSimpleParent: ChildOfSimpleParentModel,
  ChildOfSimpleParentAllOf: ChildOfSimpleParentAllOfModel,
  ComposedParent: ComposedParentModel,
  ComposedParentAllOf: ComposedParentAllOfModel,
  CompositionOfSimpleComposition: CompositionOfSimpleCompositionModel,
  CompositionOfSimpleCompositionAllOf: CompositionOfSimpleCompositionAllOfModel,
  ModelOne: ModelOneModel,
  ModelThree: ModelThreeModel,
  ModelTwo: ModelTwoModel,
  SimpleComposition: SimpleCompositionModel,
  SimpleCompositionAllOf: SimpleCompositionAllOfModel,
  SimpleParent: SimpleParentModel,
});
