/* eslint-disable */
/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

import { TypeSerializer } from '@rocket-scripts/openapi';

import { AdditionalPropertiesClassModel } from './models/AdditionalPropertiesClass';
import { AnimalModel } from './models/Animal';
import { ArrayOfArrayOfNumberOnlyModel } from './models/ArrayOfArrayOfNumberOnly';
import { ArrayOfNumberOnlyModel } from './models/ArrayOfNumberOnly';
import { ArrayTestModel } from './models/ArrayTest';
import { CapitalizationModel } from './models/Capitalization';
import { CatModel } from './models/Cat';
import { CatAllOfModel } from './models/CatAllOf';
import { CategoryModel } from './models/Category';
import { ClassModelModel } from './models/ClassModel';
import { ClientModel } from './models/Client';
import { DogModel } from './models/Dog';
import { DogAllOfModel } from './models/DogAllOf';
import { EnumArraysModel } from './models/EnumArrays';
import { EnumClassModel } from './models/EnumClass';
import { EnumTestModel } from './models/EnumTest';
import { FormatTestModel } from './models/FormatTest';
import { HasOnlyReadOnlyModel } from './models/HasOnlyReadOnly';
import { ListModel } from './models/List';
import { MapTestModel } from './models/MapTest';
import { MixedPropertiesAndAdditionalPropertiesClassModel } from './models/MixedPropertiesAndAdditionalPropertiesClass';
import { Model200ResponseModel } from './models/Model200Response';
import { ModelApiResponseModel } from './models/ModelApiResponse';
import { NameModel } from './models/Name';
import { NumberOnlyModel } from './models/NumberOnly';
import { ObjectContainingObjectWithOnlyAdditionalPropertiesModel } from './models/ObjectContainingObjectWithOnlyAdditionalProperties';
import { OrderModel } from './models/Order';
import { OuterCompositeModel } from './models/OuterComposite';
import { OuterEnumModel } from './models/OuterEnum';
import { PetModel } from './models/Pet';
import { ReadOnlyFirstModel } from './models/ReadOnlyFirst';
import { ReturnModel } from './models/Return';
import { SpecialModelNameModel } from './models/SpecialModelName';
import { TagModel } from './models/Tag';
import { UserModel } from './models/User';

export const typeSerializer = new TypeSerializer({
  AdditionalPropertiesClass: AdditionalPropertiesClassModel,
  Animal: AnimalModel,
  ArrayOfArrayOfNumberOnly: ArrayOfArrayOfNumberOnlyModel,
  ArrayOfNumberOnly: ArrayOfNumberOnlyModel,
  ArrayTest: ArrayTestModel,
  Capitalization: CapitalizationModel,
  Cat: CatModel,
  CatAllOf: CatAllOfModel,
  Category: CategoryModel,
  ClassModel: ClassModelModel,
  Client: ClientModel,
  Dog: DogModel,
  DogAllOf: DogAllOfModel,
  EnumArrays: EnumArraysModel,
  EnumClass: EnumClassModel,
  EnumTest: EnumTestModel,
  FormatTest: FormatTestModel,
  HasOnlyReadOnly: HasOnlyReadOnlyModel,
  List: ListModel,
  MapTest: MapTestModel,
  MixedPropertiesAndAdditionalPropertiesClass: MixedPropertiesAndAdditionalPropertiesClassModel,
  Model200Response: Model200ResponseModel,
  ModelApiResponse: ModelApiResponseModel,
  Name: NameModel,
  NumberOnly: NumberOnlyModel,
  ObjectContainingObjectWithOnlyAdditionalProperties: ObjectContainingObjectWithOnlyAdditionalPropertiesModel,
  Order: OrderModel,
  OuterComposite: OuterCompositeModel,
  OuterEnum: OuterEnumModel,
  Pet: PetModel,
  ReadOnlyFirst: ReadOnlyFirstModel,
  Return: ReturnModel,
  SpecialModelName: SpecialModelNameModel,
  Tag: TagModel,
  User: UserModel,
});
