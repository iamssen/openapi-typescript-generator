/* eslint-disable */
/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

import { GenericModel } from '@rocket-scripts/openapi';

import { ReadOnlyFirst } from './';

/**
 *
 * @interface ArrayTest
 */
export interface ArrayTest {
  /**
   *
   * @type {Array<string>}
   * @memberof ArrayTest
   */
  arrayOfString?: Array<string>;

  /**
   *
   * @type {Array<Array<number>>}
   * @memberof ArrayTest
   */
  arrayArrayOfInteger?: Array<Array<number>>;

  /**
   *
   * @type {Array<Array<ReadOnlyFirst>>}
   * @memberof ArrayTest
   */
  arrayArrayOfModel?: Array<Array<ReadOnlyFirst>>;

  /**
   *
   * @type {Array<string>}
   * @memberof ArrayTest
   */
  arrayOfEnum?: Array<ArrayTestArrayOfEnumEnum>;
}

export const ArrayTestModel: GenericModel = {
  classname: 'ArrayTest',
  type: 'generic',
  parent: undefined,
  vars: {
    arrayOfString: {
      name: 'arrayOfString',
      baseName: 'array_of_string',
      datatype: 'Array&lt;string&gt;',
      required: false,
      itemsDataType: 'string',
      isAnyType: false,
      isBinary: false,
      isBoolean: false,
      isByteArray: false,
      isCircularReference: false,
      isContainer: true,
      isDate: false,
      isDateTime: false,
      isDiscriminator: false,
      isDouble: false,
      isEmail: false,
      isEnum: false,
      isFile: false,
      isFloat: false,
      isFreeFormObject: false,
      isInherited: false,
      isInteger: false,
      isListContainer: true,
      isLong: false,
      isMapContainer: false,
      isModel: false,
      isNullable: false,
      isNumber: false,
      isNumeric: false,
      isPrimitiveType: true,
      isReadOnly: false,
      isSelfReference: false,
      isString: false,
      isUri: false,
      isUuid: false,
      isWriteOnly: false,
      isXmlAttribute: false,
      isXmlWrapped: false,
    },
    arrayArrayOfInteger: {
      name: 'arrayArrayOfInteger',
      baseName: 'array_array_of_integer',
      datatype: 'Array&lt;Array&lt;number&gt;&gt;',
      required: false,
      itemsDataType: 'Array&lt;number&gt;',
      isAnyType: false,
      isBinary: false,
      isBoolean: false,
      isByteArray: false,
      isCircularReference: false,
      isContainer: true,
      isDate: false,
      isDateTime: false,
      isDiscriminator: false,
      isDouble: false,
      isEmail: false,
      isEnum: false,
      isFile: false,
      isFloat: false,
      isFreeFormObject: false,
      isInherited: false,
      isInteger: false,
      isListContainer: true,
      isLong: false,
      isMapContainer: false,
      isModel: false,
      isNullable: false,
      isNumber: false,
      isNumeric: false,
      isPrimitiveType: true,
      isReadOnly: false,
      isSelfReference: false,
      isString: false,
      isUri: false,
      isUuid: false,
      isWriteOnly: false,
      isXmlAttribute: false,
      isXmlWrapped: false,
    },
    arrayArrayOfModel: {
      name: 'arrayArrayOfModel',
      baseName: 'array_array_of_model',
      datatype: 'Array&lt;Array&lt;ReadOnlyFirst&gt;&gt;',
      required: false,
      itemsDataType: 'Array&lt;ReadOnlyFirst&gt;',
      isAnyType: false,
      isBinary: false,
      isBoolean: false,
      isByteArray: false,
      isCircularReference: false,
      isContainer: true,
      isDate: false,
      isDateTime: false,
      isDiscriminator: false,
      isDouble: false,
      isEmail: false,
      isEnum: false,
      isFile: false,
      isFloat: false,
      isFreeFormObject: false,
      isInherited: false,
      isInteger: false,
      isListContainer: true,
      isLong: false,
      isMapContainer: false,
      isModel: false,
      isNullable: false,
      isNumber: false,
      isNumeric: false,
      isPrimitiveType: true,
      isReadOnly: false,
      isSelfReference: false,
      isString: false,
      isUri: false,
      isUuid: false,
      isWriteOnly: false,
      isXmlAttribute: false,
      isXmlWrapped: false,
    },
    arrayOfEnum: {
      name: 'arrayOfEnum',
      baseName: 'array_of_enum',
      datatype: 'Array&lt;string&gt;',
      required: false,
      itemsDataType: 'string',
      isAnyType: false,
      isBinary: false,
      isBoolean: false,
      isByteArray: false,
      isCircularReference: false,
      isContainer: true,
      isDate: false,
      isDateTime: false,
      isDiscriminator: false,
      isDouble: false,
      isEmail: false,
      isEnum: true,
      isFile: false,
      isFloat: false,
      isFreeFormObject: false,
      isInherited: false,
      isInteger: false,
      isListContainer: true,
      isLong: false,
      isMapContainer: false,
      isModel: false,
      isNullable: false,
      isNumber: false,
      isNumeric: false,
      isPrimitiveType: true,
      isReadOnly: false,
      isSelfReference: false,
      isString: false,
      isUri: false,
      isUuid: false,
      isWriteOnly: false,
      isXmlAttribute: false,
      isXmlWrapped: false,
    },
  },
  baseNames: {
    arrayOfString: 'array_of_string',
    arrayArrayOfInteger: 'array_array_of_integer',
    arrayArrayOfModel: 'array_array_of_model',
    arrayOfEnum: 'array_of_enum',
  },
};

/**
 * @enum {string}
 */
export enum ArrayTestArrayOfEnumEnum {
  UPPER = 'UPPER',
  Lower = 'lower',
}
