/* eslint-disable */
/**
 * Elm generator test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

import { TypeSerializer } from '@rocket-scripts/openapi';

import { AbsentModel } from './models/Absent';
import { ComposedModel } from './models/Composed';
import { ComposedAllOfModel } from './models/ComposedAllOf';
import { ComposedBaseModel } from './models/ComposedBase';
import { DiscriminatedModel } from './models/Discriminated';
import { DiscriminatedAModel } from './models/DiscriminatedA';
import { DiscriminatedAAllOfModel } from './models/DiscriminatedAAllOf';
import { DiscriminatedBModel } from './models/DiscriminatedB';
import { DiscriminatedBAllOfModel } from './models/DiscriminatedBAllOf';
import { EnumModel } from './models/Enum';
import { EnumericModel } from './models/Enumeric';
import { MaybeModel } from './models/Maybe';
import { ModelArrayModel } from './models/ModelArray';
import { OneOfModel } from './models/OneOf';
import { OneOfAModel } from './models/OneOfA';
import { OneOfBModel } from './models/OneOfB';
import { PrimitiveModel } from './models/Primitive';
import { RecursionModel } from './models/Recursion';
import { RecursionLoopModel } from './models/RecursionLoop';
import { UnsafeCharactersModel } from './models/UnsafeCharacters';

export const typeSerializer = new TypeSerializer({
  Absent: AbsentModel,
  Composed: ComposedModel,
  ComposedAllOf: ComposedAllOfModel,
  ComposedBase: ComposedBaseModel,
  Discriminated: DiscriminatedModel,
  DiscriminatedA: DiscriminatedAModel,
  DiscriminatedAAllOf: DiscriminatedAAllOfModel,
  DiscriminatedB: DiscriminatedBModel,
  DiscriminatedBAllOf: DiscriminatedBAllOfModel,
  Enum: EnumModel,
  Enumeric: EnumericModel,
  Maybe: MaybeModel,
  ModelArray: ModelArrayModel,
  OneOf: OneOfModel,
  OneOfA: OneOfAModel,
  OneOfB: OneOfBModel,
  Primitive: PrimitiveModel,
  Recursion: RecursionModel,
  RecursionLoop: RecursionLoopModel,
  UnsafeCharacters: UnsafeCharactersModel,
});
