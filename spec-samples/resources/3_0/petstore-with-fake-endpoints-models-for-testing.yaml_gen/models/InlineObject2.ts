/* eslint-disable */
/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

import { GenericModel } from '@rocket-scripts/openapi';

/**
 *
 * @interface InlineObject2
 */
export interface InlineObject2 {
  /**
   * Form parameter enum test (string array)
   * @type {Array<string>}
   * @memberof InlineObject2
   */
  enumFormStringArray?: Array<InlineObject2EnumFormStringArrayEnum>;

  /**
   * Form parameter enum test (string)
   * @type {string}
   * @memberof InlineObject2
   */
  enumFormString?: InlineObject2EnumFormStringEnum;
}

export const InlineObject2Model: GenericModel = {
  classname: 'InlineObject2',
  type: 'generic',
  parent: undefined,
  vars: {
    enumFormStringArray: {
      name: 'enumFormStringArray',
      baseName: 'enum_form_string_array',
      datatype: 'Array&lt;string&gt;',
      required: false,
      itemsDataType: 'string',
      isAnyType: false,
      isBinary: false,
      isBoolean: false,
      isByteArray: false,
      isCircularReference: false,
      isContainer: true,
      isDate: false,
      isDateTime: false,
      isDiscriminator: false,
      isDouble: false,
      isEmail: false,
      isEnum: true,
      isFile: false,
      isFloat: false,
      isFreeFormObject: false,
      isInherited: false,
      isInteger: false,
      isListContainer: true,
      isLong: false,
      isMapContainer: false,
      isModel: false,
      isNullable: false,
      isNumber: false,
      isNumeric: false,
      isPrimitiveType: true,
      isReadOnly: false,
      isSelfReference: false,
      isString: false,
      isUri: false,
      isUuid: false,
      isWriteOnly: false,
      isXmlAttribute: false,
      isXmlWrapped: false,
    },
    enumFormString: {
      name: 'enumFormString',
      baseName: 'enum_form_string',
      datatype: 'string',
      required: false,
      itemsDataType: undefined,
      isAnyType: false,
      isBinary: false,
      isBoolean: false,
      isByteArray: false,
      isCircularReference: false,
      isContainer: false,
      isDate: false,
      isDateTime: false,
      isDiscriminator: false,
      isDouble: false,
      isEmail: false,
      isEnum: true,
      isFile: false,
      isFloat: false,
      isFreeFormObject: false,
      isInherited: false,
      isInteger: false,
      isListContainer: false,
      isLong: false,
      isMapContainer: false,
      isModel: false,
      isNullable: false,
      isNumber: false,
      isNumeric: false,
      isPrimitiveType: true,
      isReadOnly: false,
      isSelfReference: false,
      isString: true,
      isUri: false,
      isUuid: false,
      isWriteOnly: false,
      isXmlAttribute: false,
      isXmlWrapped: false,
    },
  },
  baseNames: {
    enumFormStringArray: 'enum_form_string_array',
    enumFormString: 'enum_form_string',
  },
};

/**
 * @enum {string}
 */
export enum InlineObject2EnumFormStringArrayEnum {
  GreaterThan = '>',
  Dollar = '$',
}
/**
 * @enum {string}
 */
export enum InlineObject2EnumFormStringEnum {
  Abc = '_abc',
  Efg = '-efg',
  Xyz = '(xyz)',
}
