import { parseEnumModelJson } from '@rocket-scripts/openapi';

/**
 * {{#lambda.indented_star_1}}{{{unescapedDescription}}}{{/lambda.indented_star_1}}
 * @enum {string}
 */
export enum {{classname}} {
  {{#allowableValues}}
  {{#enumVars}}
  {{{name}}} = {{{value}}},
  {{/enumVars}}
  {{/allowableValues}}
};

const options = {
  enumVars: new Set([{{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}}, {{/-last}}{{/enumVars}}{{/allowableValues}}]),
};

export function from{{classname}}Json<T extends string | null | undefined>(json: unknown, ignoreDiscriminator: boolean = false): T {
  return parseEnumModelJson<T>(json, options);
}

export function to{{classname}}Json<T extends {{classname}} | undefined | null>(value: T): T {
  return value;
}

// {{classname}}
//    title: {{title}}
//    description: {{description}}, parentModel: {{parentModel}}
//    dataType: {{dataType}}, simpleType: {{simpleType}}